# This framework is for you install docker application
# 1 create directory
# 2 copy docker-compose.yml file
# 3 docker-compose up -d
# 4 create symbolic link
# You just need to add a docker compose file to the templates folder of this role when you want to develop more application.

- debug:
    msg: "{{docker_appname}} will be installed"

- name: Create docker directory
  file:
    path: "{{docker_apps_dir}}/{{docker_appname}}"
    state: directory
    owner: docker
    group: docker
    recurse: true

- name: Get Docker UID to fix file permission issue
  shell: sudo id docker -u
  register: docker_uid_json
    
- name: Convert variable
  set_fact:
    docker_uid: "{{docker_uid_json.stdout}}"
    
- debug:
    var: docker_uid

- name: Check that the local compose file exists
  stat: 
    path: ./roles/role_docker/templates/apps-{{docker_appname}}-compose.yml
  delegate_to: localhost 
  register: docker_compose_file_status

- block:  
  - name: copy docker-compose.yml
    template:
      src: apps-{{docker_appname}}-compose.yml
      dest: "{{docker_apps_dir}}/{{docker_appname}}/docker-compose.yml"

  - name: Run docker-compose and add exra user permission
    shell: |
      docker-compose up -d
      sleep 30s
      setfacl -m u:docker:rwx -R {{docker_apps_dir}}/{{docker_appname}}
    args:
      chdir: "{{docker_apps_dir}}/{{docker_appname}}"

  - name: Create a symbolic link
    file:
      src: '{{item.src}}'
      dest: '{{item.dest}}'
      state: link
    with_items:
      - {src: "{{docker_apps_dir}}/{{docker_appname}}/docker-compose.yml",dest: "/data/config/apps-{{docker_appname}}-compose.yml"}
      - {src: "{{docker_apps_dir}}/{{docker_appname}}",dest: "/data/wwwroot/{{docker_appname}}"}

  when: docker_compose_file_status.stat.exists

- block:
  - name: Get install path
    shell: curl -s https://raw.githubusercontent.com/Websoft9/docker-{{docker_appname}}/main/variables.json |jq -r .installpath
    register: docker_apps_install_path
    
  - name: Clone {{docker_appname}} in Websoft9 
    git:
      repo: "https://github.com/Websoft9/docker-{{docker_appname}}.git"
      dest: "{{docker_apps_install_path.stdout}}"
      force: "yes"

  - name: Run docker-compose and add exra user permission
    shell: |
      docker-compose up -d
      sleep 30s
      setfacl -m u:docker:rwx -R {{docker_apps_install_path.stdout}}
    args:
      chdir: "{{docker_apps_install_path.stdout}}"

  - name: Create a symbolic link
    file:
      src: '{{item.src}}'
      dest: '{{item.dest}}'
      state: link
    with_items:
      - {src: "{{docker_apps_install_path.stdout}}/docker-compose.yml",dest: "/data/config/apps-{{docker_appname}}-compose.yml"}
      - {src: "{{docker_apps_install_path.stdout}}",dest: "/data/wwwroot/{{docker_appname}}"}
      
  when: not docker_compose_file_status.stat.exists
  
- block:
  - set_fact:
      docker_version_cmd: "{{docker_apps_commands[docker_appname].check_version}}"
      docker_extra_cmd:   "{{docker_apps_commands[docker_appname].extra}}"
  - debug: var=docker_version_cmd
  - debug: var=docker_extra_cmd

  - name: Chcek {{docker_appname}} version
    shell: sudo echo "{{docker_appname}} version:" $(eval "{{docker_version_cmd}}")  |sudo tee -a /data/logs/install_version.txt
    when: docker_version_cmd is defined and docker_version_cmd.stdout is not none
    failed_when: false

  - name: Execute container extra command
    shell: |
      sleep 30s
      eval "{{docker_extra_cmd}}"
    when: docker_extra_cmd is defined and docker_extra_cmd is not none
    failed_when: false

